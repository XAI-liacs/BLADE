import numpy as np

from iohblade.problem import Problem
from iohblade.solution import Solution

from iohblade.benchmarks.analysis.auto_correlation_base_spec import AutoCorrBaseSpec

best_solution = [1.2065002259, 0.4579577248, 0.5163353850, 0.4072619373, 0.3357781229, 0.2857531610, 0.2820916949, 0.2605397021, -0.0945455083, 0.0263675774, 0.0066053345, 0.4231327261, 0.1460589430, 0.2693078743, 0.0894390737, 0.1956637306, 0.2479890347, -0.0252634907, 0.1662117356, -0.2218493784, 0.0739312998, 0.2415490072, 0.1698246070, 0.3250002134, 0.0020647116, -0.0688859195, 0.0585905178, 0.0939453029, -0.3060000075, -0.1837206775, -0.2352337979, 0.0835844954, -0.0058309576, -0.0832913333, -0.0166100706, -0.0593295469, -0.0358427923, -0.0137145337, -0.2200581708, -0.0020420409, -0.0154295569, -0.1668919220, 0.1254567765, 0.0104704418, -0.1281078357, -0.0961891358, -0.0180100824, 0.0285695118, -0.1876421178, -0.0503548117, 0.0705665536, -0.0849054288, -0.1712106082, 0.1330779045, -0.0395224921, -0.1763118729, 0.1943874403, 0.3136366436, 0.2907763337, 0.0972482020, 0.2859490417, 0.0544729197, 0.2859115117, 0.1089164067, 0.0171270233, -0.0434679259, -0.1024364047, -0.1167575690, -0.0003774918, -0.0344795844, -0.0972136207, -0.1226383339, -0.0252432553, 0.0400353923, 0.0455096903, 0.0122078271, -0.0826149005, 0.0068314042, -0.1352404062, 0.1294605758, -0.0250363591, 0.0356465906, 0.0085605877, -0.0734465832, 0.0239223522, 0.0560616111, 0.1051222588, 0.1186521152, 0.2114356563, 0.0580833852, 0.1532644654, 0.0340677496, 0.0584859676, 0.0676309739, 0.0501669055, 0.0098826564, -0.0699961802, -0.0655442615, -0.2431379908, 0.0191721224, -0.0101123101, 0.0395025740, 0.0369236983, -0.0405410938, 0.0043783628, -0.0022377932, 0.1882810103, -0.0392647889, 0.1110883981, -0.0056550805, -0.0165795658, 0.0484482116, 0.1040965030, 0.0315331695, 0.0290282853, 0.1700089425, 0.0788158652, 0.3053423957, 0.1407591357, 0.1288565749, 0.0731018735, 0.1212327910, 0.0265656763, -0.0026874534, 0.1448773580, -0.1569172936, -0.0332279397, -0.0961953570, -0.1057990671, -0.0208089846, 0.0622545893, 0.0086508578, 0.1134542356, 0.0796647542, -0.0118068228, 0.1183252889, 0.0322959545, 0.1390562294, 0.1334327477, 0.0790933677, -0.0121592574, 0.0355197021, 0.0680023155, 0.1367771272, 0.2764105186, 0.0917362039, 0.1789370907, 0.0801451602, 0.1507336094, 0.1499095182, 0.1338559365, 0.0883362440, 0.0130685381, -0.0010501160, 0.0434483442, -0.0452555246, -0.0160911253, 0.0001037672, -0.0215276925, 0.0922451592, 0.0914967270, 0.1247376137, 0.0674269368, 0.1233065439, 0.0662811693, 0.1056929066, 0.1236410207, 0.1092652789, 0.1253119938, 0.1350819190, 0.0760669548, 0.0975781877, 0.3030153656, -0.0405615005, 0.0736039858, 0.1516256451, 0.2310415709, 0.0903196002, 0.1368532961, 0.1558915065, 0.1395537845, 0.1134530692, 0.1672360224, 0.1779020155, 0.1110537453, 0.3179860968, 0.2418612890, 0.1879389889, 0.1759242853, 0.1751315796, 0.0707347421, 0.1498901200, 0.0009217008, 0.1217537983, 0.0774209961, 0.1585992473, 0.0621134399, 0.1515100010, 0.0780855072, 0.0997527327, 0.1158696157, 0.0293743767, 0.0551188205, 0.0597680188, -0.2775720739, 0.0759704568, 0.1250316677, 0.2132197633, -0.0252846511, -0.2298263857, -0.1916394076, -0.0828138996, -0.4176293110, -0.7396661838, -0.5511700738, -0.5448611785, -0.1727176925, -0.1101347125, 0.2043220162, -0.1082288708, -0.1748688117, 0.0862407071, -0.0531903867, -0.0616308223, 0.0700887776, 0.2081066310, 0.0954712433, -0.2241273540, 0.0753693148, 0.0747931780, -0.0124247160, -0.0919875318, 0.0869789932, 0.0228948007, 0.0330558155, 0.0365086857, 0.0425990861, 0.0946517743, 0.0461941250, 0.0314389948, 0.1547977504, 0.0995246754, 0.0972214450, 0.0642031653, 0.1125917823, 0.0823779771, 0.1138470746, 0.0561091801, 0.0318706784, 0.0083585533, 0.0141864593, 0.0550841887, 0.0552072046, 0.0056539829, 0.0160881555, 0.0233437573, 0.0715285236, 0.0809609974, 0.0733507409, 0.0740536003, 0.0214532872, 0.0210531815, 0.0613127802, 0.1098196117, 0.0679995089, 0.0841437462, 0.0422816392, 0.0795029912, 0.1219842632, 0.0629392926, 0.0442479973, 0.1754482798, 0.1892151967, 0.0506690589, 0.1127489948, 0.0489164780, 0.1195561384, 0.0803870907, 0.1088302988, 0.0086773701, 0.0350070450, -0.0039451117, -0.0491785508, 0.0777041816, 0.1256031497, 0.0758115755, 0.0338649690, 0.0774479672, 0.1600267712, 0.1116514343, 0.0393425971, 0.0880571065, 0.1752844511, 0.0567110352, 0.0848220320, 0.1023379468, 0.1731927552, 0.1015859496, 0.0456034593, 0.1484852609, 0.2335600810, 0.2680922857, 0.0964039102, 0.1370762748, 0.1194107677, 0.0705488401, 0.0492937128, 0.0010280509, 0.0748767880, 0.0413276428, -0.0120807694, -0.1011133614, 0.0378549584, 0.0742557513, 0.0834599468, 0.0828277891, 0.1937349434, 0.0722637117, 0.0539880627, 0.1092967592, 0.1314066075, 0.2276951671, 0.0993954217, 0.0506623717, 0.0665635040, 0.1475022076, 0.1348793959, 0.1120191289, 0.2268202779, 0.1968416912, 0.1785939824, 0.0653614828, 0.1308139129, 0.1845238365, 0.0400508726, -0.0030416083, 0.0612302085, 0.0446805476, 0.0413828618, 0.0087997710, -0.0288662567, 0.0106587067, 0.0459708143, 0.0777709776, 0.1302908220, 0.1269325239, 0.1144772737, 0.1448279485, 0.0854580145, 0.0780628793, 0.1185972450, 0.1083017344, 0.1382659716, 0.1161843882, 0.1031074870, 0.1081799914, 0.0968144848, 0.1369405176, 0.1597198239, 0.1076990897, 0.0998522537, 0.0980860040, 0.0856864888, 0.1147330385, 0.1090380435, 0.0478343797, 0.1104568134, 0.0535653627, 0.0395945072, 0.0615590595, 0.0846094168, 0.1366808400, 0.0979556009, 0.1150407810, 0.1093077855, 0.0701841815, 0.1536579376, 0.0281163265, -0.0188640466, 0.1095483493, 0.2435488950, 0.2224846591, 0.0349037817, 0.0471722551, 0.1366470882, 0.1619649438, -0.0201219126, 0.0776987862, 0.1770040649, 0.1642189494, 0.1510757616, 0.2256426202, 0.1989086542, 0.1778289411, 0.1869462368, 0.2779359655, 0.2578238178, 0.3850396218, 0.4772987312, 0.5429612326]


class AutoCorrIneq3(AutoCorrBaseSpec, Problem):
    r"""
    Auto Correlation Inequality 1:
        Takes 0 arugements, instantiates evaluator and base class with appropritate
        functionality.
        Optimisation:
            \[\max_t |||f*f||(t)| / (∫f)^2 \]
        Best known auto-correlation 1 score by alpha evolve: is C_3 <= 1.4557 (prev 1.4581).
    """

    def __init__(self, best_known: float = 1.4557):
        AutoCorrBaseSpec.__init__(
            self, task_name="auto_corr_ineq_3", n_bins=400, best_known=best_known, best_solution=best_solution
        )
        Problem.__init__(self, name=self.task_name)

        self.task_prompt = self.make_task_prompt("minimize  max_t |(f*f)(t)| / (∫ f)^2")
        self.example_prompt = self.make_example_prompt("AutoCorreCandidate_2")
        self.format_prompt = self.make_format_prompt()

        self.dependencies += ["scipy"]

        self.minimisation = True

    def evaluate(self, solution: Solution) -> Solution:
        code = solution.code

        try:
            f, err = self._get_time_series(code)
            if err is not None:
                raise err
        except Exception as e:
            print("\t Exception in `auto_correlation_ineq3.py`, " + e.__repr__())
            solution.set_scores(float("inf"), f"exec-error {e}", "exec-failed")
            return solution

        try:
            if f.ndim != 1 or f.size == 0:
                raise ValueError("f must be a non-empty 1D array")

            dx = self.dx
            g = dx * np.convolve(f, f, mode="full")
            I = dx * float(np.sum(f))
            if I == 0.0:
                raise ValueError("Integral ∫f must be nonzero for C3")

            score = float(np.max(np.abs(g)) / (I * I))  # minimize
            solution.set_scores(
                score, f"C3 ratio = {score:.6g}, best known = {self.best_known:.6g}"
            )
        except Exception as e:
            solution.set_scores(float("inf"), f"calc-error {e}", "calc-failed")
        return solution

    def test(self, solution: Solution) -> Solution:
        return self.evaluate(solution)

    def to_dict(self):
        return self.__dict__
